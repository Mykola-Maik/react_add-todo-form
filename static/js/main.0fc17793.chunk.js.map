{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","helpers.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","cn","TodoList","todos","map","username","getUser","userId","usersFromServer","find","todosWithUsers","completed","getNewId","arr","ids","item","maxId","Math","max","Number","isFinite","App","useState","setTodos","setTitle","selectedUserId","setSelectedUserId","titleError","setTitleError","selectUserError","setSelectUserError","useEffect","setTimeout","action","method","onSubmit","event","preventDefault","prevTodos","newTodo","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fc17793.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name, email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, title, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': id === 1 || id === 15,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user\n        && (\n          <UserInfo user={user} />\n        )}\n    </article>\n  );\n};\n","// import todosFromServer from '../../api/todos';\n\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from './types/User';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport function getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todosWithUsers = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const getNewId = (arr: { id: number }[]): number => {\n  const ids = arr.map((item) => item.id);\n  const maxId = Math.max(...ids);\n\n  return Number.isFinite(maxId)\n    ? maxId + 1\n    : 1;\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { FC, useEffect, useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport { Todo } from './types/Todo';\nimport { getUser, todosWithUsers, getNewId } from './helpers';\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState<number>(0);\n\n  const [titleError, setTitleError] = useState(false);\n  const [selectUserError, setSelectUserError] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTodos(todosWithUsers);\n    }, 500);\n  }, []);\n\n  const handleSelectUserChange = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    const {\n      value,\n    } = event.target;\n\n    setSelectUserError(false);\n    setSelectedUserId(Number(value));\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      value,\n    } = event.target;\n\n    setTitleError(false);\n    setTitle(value);\n  };\n\n  const clearForm = () => {\n    setTitle('');\n    setSelectedUserId(0);\n    setTitleError(false);\n    setSelectUserError(false);\n  };\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title || !selectedUserId) {\n      setTitleError(\n        !title,\n      );\n\n      setSelectUserError(\n        !selectedUserId,\n      );\n    } else {\n      setTodos((prevTodos) => {\n        const newTodo = {\n          id: getNewId(prevTodos),\n          title,\n          completed: false,\n          userId: selectedUserId,\n          user: getUser(selectedUserId),\n        };\n\n        return [...prevTodos, newTodo];\n      });\n\n      clearForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {titleError\n            && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"selectUser\">User: </label>\n          <select\n            id=\"selectUser\"\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={handleSelectUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {selectUserError\n            && (\n              <span\n                className=\"error\"\n              >\n                Please choose a user\n              </span>\n            )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}